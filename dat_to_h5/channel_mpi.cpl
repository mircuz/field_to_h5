#include <mpi.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>
#include "remap3d_wrap.h"
#include "/home/mirco/Scrivania/hdf5/include/hdf5.h"
#include "/home/mirco/Scrivania/hdf5/include/hdf5_hl.h"
!//#include "/cineca/prod/opt/libraries/hdf5/1.8.18/openmpi--1-10.3--gnu--6.1.0/include/hdf5.h"
!//#include "/cineca/prod/opt/libraries/hdf5/1.8.18/openmpi--1-10.3--gnu--6.1.0/include/hdf5_hl.h"

INTEGER rank, size
gamma=0
USE dnsdata
USE initialization
USE data_man
USE dnsdirect
USE convol_trasp
time=0

FILE u_dat
FILE v_dat
FILE w_dat

u_dat = OPEN("u.dat")
v_dat = OPEN("v.dat")
w_dat = OPEN("w.dat")

WRITE "V(" LO(V),LO2(V),LO3(V)")	TO	V(" HI(V),HI2(V),HI3(V)")"

LOOP FOR k=LO2(V) TO HI2(V)
	LOOP FOR i=LO(V) TO HI(V)
		LOOP FOR j=LO3(V) TO HI3(V)
			READ FROM u_dat V.u.REAL(i,k,j)
			READ FROM u_dat V.u.IMAG(i,k,j)
			READ FROM v_dat V.v.REAL(i,k,j)
			READ FROM v_dat V.v.IMAG(i,k,j)
			READ FROM w_dat V.w.REAL(i,k,j)
			READ FROM w_dat V.w.IMAG(i,k,j)
		REPEAT LOOP
	REPEAT LOOP
REPEAT LOOP
!//convol_trasp(VV,V);
ytoz;	write_on_disk
!outstats()


IF rank=0 THEN WRITE; WRITE "<Simulation Ended>"; WRITE; WRITE; END IF
<* 	MPI_Barrier(MPI_COMM_WORLD);
	free(u_convol_);	free(v_convol_);	free(w_convol_);				//Worked uvw
	free(U_t_);		free(V_t_);		free(W_t_);								//Local UVW copied into structure
  	free(uu_);	free(uv_);	free(vv_);	free(vw_);	free(ww_);	free(uw_); 	//Local convols copied into structure
	free(recvbuf_);	 free(sendbuf_);										//Remap local arrays
	free(eta_write_);	 free(v_write_);
	MPI_Finalize();	*>
